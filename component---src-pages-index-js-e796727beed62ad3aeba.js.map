{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.js","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/PostListing/PostListing.js","webpack:///./src/components/SEO/SEO.js"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_6___default","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","__webpack_exports__","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","Header","Content","Footer","MainLayout","children","react__WEBPACK_IMPORTED_MODULE_5___default","antd_lib_layout__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","name","content","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","antd_lib_menu__WEBPACK_IMPORTED_MODULE_1___default","theme","mode","style","lineHeight","selectable","Item","key","padding","background","minHeight","textAlign","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","undefined","__webpack_require__","PostListing","getPostList","postList","forEach","postEdge","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_4___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_5__","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","type","JSON","stringify","property","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-js-e796727beed62ad3aeba.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"index-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2017. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link } from \"gatsby\";\nimport config from \"../../data/SiteConfig\";\n\nimport \"./index.css\";\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nconst { Header, Content, Footer } = Layout;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Layout className=\"layout\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <Header>\n        <Link className=\"logo\" to=\"/\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            style={{ lineHeight: '64px', }}\n            selectable={false}\n          >\n            <Menu.Item key=\"about\"><Link to=\"/about\">About</Link></Menu.Item>\n            <Menu.Item key=\"contact\"><Link to=\"/contact\">Contact</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '50px 50px 0', }}>\n          <div style={{ background: '#fff', padding: 24, minHeight: 280, }}>\n            {children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center', }}>\n          Ant Design ©2018 Created by Ant UED\n        </Footer>\n      </Layout>\n    );\n  }\n}\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}