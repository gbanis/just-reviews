{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.js","webpack:///./src/components/PostTags/PostTags.js","webpack:///./src/components/SocialLinks/SocialLinks.js","webpack:///./src/templates/post.js","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.js","webpack:///./src/components/Disqus/Disqus.js","webpack:///./src/components/SEO/SEO.js"],"names":["components_UserInfo_UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","react","components_PostTags_PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","tag_default","components_SocialLinks_SocialLinks","_this$props","postNode","postPath","mobile","post","frontmatter","url","url_join_default","SiteConfig_default","siteUrl","pathPrefix","iconSize","renderShareCount","filter","RedditShareButton","title","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","post_PostTemplate","slug","pageContext","data","markdownRemark","id","category_id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postSEO","dangerouslySetInnerHTML","__html","html","Disqus","Component","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","dateFromFormat","dateFormat","userName","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","Header","Content","Footer","MainLayout","children","react__WEBPACK_IMPORTED_MODULE_5___default","antd_lib_layout__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","name","content","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_8___default","gatsby__WEBPACK_IMPORTED_MODULE_7__","antd_lib_menu__WEBPACK_IMPORTED_MODULE_1___default","theme","mode","lineHeight","selectable","Item","padding","background","minHeight","textAlign","_this","_Component","call","state","toasts","notifyAboutComment","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","onSnackbarDismiss","slice","setState","push","text","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_6___default","url_join__WEBPACK_IMPORTED_MODULE_5___default","fields","react__WEBPACK_IMPORTED_MODULE_3___default","react_disqus_comments__WEBPACK_IMPORTED_MODULE_4___default","shortname","identifier","onNewComment","react__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","image","postURL","postMeta","cover","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-post-js-28ff6877ef9cf43a0f9c.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport { Tag } from 'antd';\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Tag>{tag}</Tag>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.css\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { slug } = this.props.pageContext;\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div>\n            <h1>{post.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <div className=\"post-meta\">\n              <PostTags tags={post.tags} />\n              <SocialLinks postPath={slug} postNode={postNode} />\n            </div>\n            <UserInfo config={config} />\n            <Disqus postNode={postNode} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`;\n","module.exports = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2017. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { Link } from \"gatsby\";\nimport config from \"../../data/SiteConfig\";\n\nimport \"./index.css\";\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nconst { Header, Content, Footer } = Layout;\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Layout className=\"layout\">\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <Header>\n        <Link className=\"logo\" to=\"/\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            style={{ lineHeight: '64px', }}\n            selectable={false}\n          >\n            <Menu.Item key=\"about\"><Link to=\"/about\">About</Link></Menu.Item>\n            <Menu.Item key=\"contact\"><Link to=\"/contact\">Contact</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '50px 50px 0', }}>\n          <div style={{ background: '#fff', padding: 24, minHeight: 280, }}>\n            {children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center', }}>\n          Ant Design ©2018 Created by Ant UED\n        </Footer>\n      </Layout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n    console.log(postNode);\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}